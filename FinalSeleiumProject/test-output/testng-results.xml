<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-13T12:30:29 IST" name="Default suite" finished-at="2023-04-13T12:32:08 IST" duration-ms="99187">
    <groups>
    </groups>
    <test started-at="2023-04-13T12:30:29 IST" name="Default test" finished-at="2023-04-13T12:32:08 IST" duration-ms="99187">
      <class name="testCase.TC01">
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:30:29 IST" name="BeforeMethod" finished-at="2023-04-13T12:30:55 IST" duration-ms="26411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="verifyCookiesHandle()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:30:55 IST" name="verifyCookiesHandle" finished-at="2023-04-13T12:30:56 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCookiesHandle -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:30:56 IST" name="afterMethod" finished-at="2023-04-13T12:30:57 IST" duration-ms="1795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:30:57 IST" name="BeforeMethod" finished-at="2023-04-13T12:31:10 IST" duration-ms="12858" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="verifyGetWindowHandle()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:31:10 IST" name="verifyGetWindowHandle" finished-at="2023-04-13T12:31:12 IST" duration-ms="1432" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <div class="linkedin"></div> is not clickable at point (147, 470). Other element would receive the click: <div role="dialog" aria-live="polite" aria-label="cookieconsent" aria-describedby="cookieconsent:desc" class="cc-window cc-banner cc-type-info cc-theme-classic cc-bottom cc-color-override-74746687 " style="">...</div>
  (Session info: chrome=111.0.5563.149)
Build info: version: '4.8.1', revision: '8ebccac989'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [dcb08c94240d3bfd93e2b17a051e5322, clickElement {id=757b0185-c942-48b0-84f4-40b15d2f8924}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 111.0.5563.149, chrome: {chromedriverVersion: 111.0.5563.41 (976ef12907ef..., userDataDir: C:\Users\AMARJEET\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:56091}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56091/devtoo..., se:cdpVersion: 111.0.5563.149, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (dcb08c94240d3bfd93e2b17a051e5322)] -> xpath:  //*[@id="gfg-footer"]/div[1]/div[1]/div[3]/a[3]/div]
Session ID: dcb08c94240d3bfd93e2b17a051e5322]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <div class="linkedin"></div> is not clickable at point (147, 470). Other element would receive the click: <div role="dialog" aria-live="polite" aria-label="cookieconsent" aria-describedby="cookieconsent:desc" class="cc-window cc-banner cc-type-info cc-theme-classic cc-bottom cc-color-override-74746687 " style="">...</div>
  (Session info: chrome=111.0.5563.149)
Build info: version: '4.8.1', revision: '8ebccac989'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [dcb08c94240d3bfd93e2b17a051e5322, clickElement {id=757b0185-c942-48b0-84f4-40b15d2f8924}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 111.0.5563.149, chrome: {chromedriverVersion: 111.0.5563.41 (976ef12907ef..., userDataDir: C:\Users\AMARJEET\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:56091}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56091/devtoo..., se:cdpVersion: 111.0.5563.149, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (dcb08c94240d3bfd93e2b17a051e5322)] -> xpath:  //*[@id="gfg-footer"]/div[1]/div[1]/div[3]/a[3]/div]
Session ID: dcb08c94240d3bfd93e2b17a051e5322
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy16.click(Unknown Source)
at pages.MyAccountPage.windowHandle(MyAccountPage.java:56)
at testCase.TC01.verifyGetWindowHandle(TC01.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetWindowHandle -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:31:12 IST" name="afterMethod" finished-at="2023-04-13T12:31:13 IST" duration-ms="880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:31:13 IST" name="BeforeMethod" finished-at="2023-04-13T12:31:25 IST" duration-ms="12917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="verifyLoginWithValidCredential()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:31:25 IST" name="verifyLoginWithValidCredential" finished-at="2023-04-13T12:31:27 IST" duration-ms="1815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredential -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:31:27 IST" name="afterMethod" finished-at="2023-04-13T12:31:28 IST" duration-ms="1107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:31:28 IST" name="BeforeMethod" finished-at="2023-04-13T12:31:41 IST" duration-ms="12704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="verifyMouseHover()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:31:41 IST" name="verifyMouseHover" finished-at="2023-04-13T12:31:41 IST" duration-ms="277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMouseHover -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:31:41 IST" name="afterMethod" finished-at="2023-04-13T12:31:42 IST" duration-ms="824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:31:42 IST" name="BeforeMethod" finished-at="2023-04-13T12:31:54 IST" duration-ms="11909" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="verifyScrollDown()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:31:54 IST" name="verifyScrollDown" finished-at="2023-04-13T12:31:54 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDown -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:31:54 IST" name="afterMethod" finished-at="2023-04-13T12:31:55 IST" duration-ms="837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:31:55 IST" name="BeforeMethod" finished-at="2023-04-13T12:32:07 IST" duration-ms="11966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="verifyScrollup()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:32:07 IST" name="verifyScrollup" finished-at="2023-04-13T12:32:07 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollup -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC01@6c80d78a]" started-at="2023-04-13T12:32:07 IST" name="afterMethod" finished-at="2023-04-13T12:32:08 IST" duration-ms="1100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCase.TC01 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
